Titan Secure Volume
===================


Data Format
-----------


Always starts with a Volume Header, followed by a MAC Table, followed by 0 or more Sectors.

Everything is aligned to sector size.

Everything written to the storage device is either encrypted data, or hashes, including headers and other structures.  Without the Cipher Keys, everything will look like random data, and an attacker can never be sure the storage device even contains a Titan Secure Volume.

All structures in a Titan Secture Volume follow the Encrypt-then-MAC pattern.  Data should always be authenticated before being fed into the decryption function(s).

All integer values are stored little endian.

The Volume Header and Sectors are authenticated using their associated MAC tags.  The MAC tag is calculated like so:
	tag = MAC (MAC Key, data || sector)

where data is the (encrypted) data being authenticated, and sector is a 32-bit sector number (little endian).  The Volume Header is considered sector 0.  Thus, the first data Sector is considered sector 1.


Version 0x0100 uses the following functions:
	* Authentication: HMAC-SHA-256
	* Encryption: Threefish-512-XTS
		- Volume Header is Sector 0.
		- Sectors are Sector [1..Sector Count]


Cipher Keys:
	* 64  binary    MAC Key
	* 64  binary    Encryption Key


Volume Header:
	* 8   string    "TITANTSV"
	* 2   uint16    Version (0x0100)
	* 32  string    Cipher Suite (e.g. "Threefish-512-XTS-HMAC-SHA-256"; Padded to length with 0)
	* 4   uint32    Sector Size in bytes
	* 4   uint32    Sector Count
	* 14            Padding (Make Header Multiple of Encryption Block Size)
	* 32  binary    MAC tag
	* *             Padding (Make Header Multiple of Sector Size)

The Volume Header, excluding MAC tag and the last Padding, should be a multiple of the Encryption Block Size (64 bytes).
The Volume Header, including MAC tag and the last Padding, should be a multiple of the Sector Size.
The MAC tag authenticates the entire header, except for the last Padding and the MAC tag itself.
Padding should be filled with random data.
The first Padding is encrypted, but the last Padding is not.
Cipher Suite can be:
	Threefish-512-XTS-HMAC-SHA-256


MAC Table:
	* 32*Sector Count   binary    MAC tag(s)
	* *                           Padding

The MAC Table follows the Volume Header, and should be padded such that its length is a multiple of Sector Size.
The MAC Table has no associated MAC tag, as it is not necessary to authenticate the MAC tags themselves.
The MAC Table is not encrypted.
The Padding should be filled with random data.


Sector:
	* 1*Sector Size   binary    Data

The Sector is associated with a MAC tag using the MAC Table.  The first sector cooresponds with the first MAC tag in the MAC Table, and so on.
